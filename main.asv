% COMP3800 â€“ Image Processing
% Traffic Lane Detector
% Yuan Gao, Will Eddy, Tyler
% 03/31/2021

clc; close all; clear;

% Scan in Image
A = imread('resource\test.jpg');

% Convert to Grayscale
G = rgb2gray(A);

% Darken Grayscale
D = imadjust(G);

% RGB to HSV
HSV = rgb2hsv(A);

% RGB to HSL
rgb = double(A)/255;
r = rgb(:,:,1);
g = rgb(:,:,2);
b = rgb(:,:,3);

% Hue
numi = 1 / 2 * ((r - g) + (r - b));
denom = ((R - G).^2 + ((r - b) .* (g - b))) .^ 0.5;

% To avoid divide by zero exception add a small number in the denominator
H = acosd(numi ./ (denom + 0.000001));

% If B > G then H = 360 - Theta
H(b > g) = 360 - H(b > g);

% Normalize to the range [0 1]
H = H / 360;

%Saturation
S = 1 - (3 ./ (sum(I, 3) + 0.000001)) .* min(I,[],3);

I = (r + g + b)/3;

HSI = cat(3, H, S, I);

% Show Original Image
subplot(2, 3, 1);
imshow(A);
title('original');

subplot(2, 3, 2);
imshow(G);
title('grayscale');

subplot(2, 3, 3);
imshow(D);
title('darkened grayscale');

subplot(2, 3, 4);
imshow(HSV);
title('HSV');

subplot(2, 3, 5);
imshow(HSI);
title('HSI');

pause;


clc; close all; clear;